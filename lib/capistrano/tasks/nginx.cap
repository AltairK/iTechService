# Where your nginx lives. Usually /opt/nginx or /usr/local/nginx for source compiled.
set :nginx_path_prefix, '/usr/local/nginx' unless any?(:nginx_path_prefix)

# Path to the nginx erb template to be parsed before uploading to remote
set :nginx_local_config, "#{fetch(:templates_path)}/nginx.conf.erb" unless any?(:nginx_local_config)

# Path to where your remote config will reside (I use a directory sites inside conf)
set :nginx_remote_config, "#{fetch(:nginx_path_prefix)}/conf/sites/#{fetch(:application)}.conf" unless any?(:nginx_remote_config)

# Nginx tasks are not *nix agnostic, they assume you're using Debian/Ubuntu.
# Override them as needed.
namespace :nginx do
  desc '|DarkRecipes| Parses and uploads nginx configuration for this app.'
  task :setup do
    on roles(:app), except: {no_release: true} do
      generate_config(nginx_local_config, nginx_remote_config)
    end
  end

  desc '|DarkRecipes| Parses config file and outputs it to STDOUT (internal task)'
  task :parse do
    on roles(:app), except: {no_release: true} do
      info parse_config(nginx_local_config)
    end
  end

  desc '|DarkRecipes| Restart nginx'
  task :restart do
    on roles(:app), except: {no_release: true} do
      sudo 'nginx -s reload'
    end
  end

  desc '|DarkRecipes| Stop nginx'
  task :stop do
    on roles(:app), except: {no_release: true} do
      sudo 'nginx -s stop'
    end
  end

  desc '|DarkRecipes| Start nginx'
  task :start do
    on roles(:app), except: {no_release: true} do
      sudo 'nginx'
    end
  end

  #desc '|DarkRecipes| Show nginx status'
  #task :status do
  #  on roles(:app), except: {no_release: true} do
  #    sudo 'service nginx status'
  #  end
  #end
end

#after 'deploy:setup' do
#  nginx.setup if Capistrano::CLI.ui.agree('Create nginx configuration file? [Yn]')
#end# if is_using_nginx